#pragma checksum "C:\Users\tilt7\Documents\GitHub\BluetoothLEExplorer\BluetoothLEExplorer\BluetoothLEExplorer\Views\VirtualPeripheralPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "1EBBE63E8B703D897F84DC042D55B1E0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BluetoothLEExplorer.Views
{
    partial class VirtualPeripheralPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VirtualPeripheralPage_obj13_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVirtualPeripheralPage_Bindings
        {
            private global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj15;
            private global::Windows.UI.Xaml.Controls.Button obj16;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj16Click;

            private VirtualPeripheralPage_obj13_BindingsTracking bindingsTracking;

            public VirtualPeripheralPage_obj13_Bindings()
            {
                this.bindingsTracking = new VirtualPeripheralPage_obj13_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13: // Views\VirtualPeripheralPage.xaml line 103
                        this.obj13 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 14: // Views\VirtualPeripheralPage.xaml line 105
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15: // Views\VirtualPeripheralPage.xaml line 106
                        this.obj15 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Views\VirtualPeripheralPage.xaml line 107
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj16Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.RemoveThisFromContext();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj16Click;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj13.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IVirtualPeripheralPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Service(obj.Service, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsPublishing(obj.IsPublishing, phase);
                    }
                }
            }
            private void Update_Service(global::GattServicesLibrary.GenericGattService obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Service_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Service_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 105
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                }
            }
            private void Update_IsPublishing(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 106
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj15, obj);
                }
            }
            private void UpdateTwoWay_15_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.IsPublishing = this.obj15.IsOn;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VirtualPeripheralPage_obj13_BindingsTracking
            {
                private global::System.WeakReference<VirtualPeripheralPage_obj13_Bindings> weakRefToBindingObj; 

                public VirtualPeripheralPage_obj13_BindingsTracking(VirtualPeripheralPage_obj13_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VirtualPeripheralPage_obj13_Bindings>(obj);
                }

                public VirtualPeripheralPage_obj13_Bindings TryGetBindingObject()
                {
                    VirtualPeripheralPage_obj13_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualPeripheralPage_obj13_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel obj = sender as global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_IsPublishing(obj.IsPublishing, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsPublishing":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsPublishing(obj.IsPublishing, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel obj)
                {
                    VirtualPeripheralPage_obj13_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void RegisterTwoWayListener_15(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_IsOn();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VirtualPeripheralPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVirtualPeripheralPage_Bindings
        {
            private global::BluetoothLEExplorer.Views.VirtualPeripheralPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.RelativePanel obj8;
            private global::Windows.UI.Xaml.Controls.RelativePanel obj9;
            private global::Windows.UI.Xaml.Controls.GridView obj11;
            private global::Windows.UI.Xaml.Controls.ComboBox obj17;
            private global::Windows.UI.Xaml.Controls.Button obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj21;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj11SelectionChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj18Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj19Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj20Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj21Click;

            private VirtualPeripheralPage_obj1_BindingsTracking bindingsTracking;

            public VirtualPeripheralPage_obj1_Bindings()
            {
                this.bindingsTracking = new VirtualPeripheralPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // Views\VirtualPeripheralPage.xaml line 88
                        this.obj8 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                        break;
                    case 9: // Views\VirtualPeripheralPage.xaml line 92
                        this.obj9 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                        break;
                    case 11: // Views\VirtualPeripheralPage.xaml line 97
                        this.obj11 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj11SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.NavigateToService();
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj11SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 17: // Views\VirtualPeripheralPage.xaml line 94
                        this.obj17 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Views\VirtualPeripheralPage.xaml line 95
                        this.obj18 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj18Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.CreateService();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj18Click;
                        break;
                    case 19: // Views\VirtualPeripheralPage.xaml line 81
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj19Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoSettings();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj19Click;
                        break;
                    case 20: // Views\VirtualPeripheralPage.xaml line 82
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj20Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoPrivacy();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj20Click;
                        break;
                    case 21: // Views\VirtualPeripheralPage.xaml line 83
                        this.obj21 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj21Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoAbout();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj21Click;
                        break;
                    default:
                        break;
                }
            }

            // IVirtualPeripheralPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::BluetoothLEExplorer.Views.VirtualPeripheralPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::BluetoothLEExplorer.Views.VirtualPeripheralPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::BluetoothLEExplorer.ViewModels.VirtualPeripheralPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsPeripheralRoleSupported(obj.IsPeripheralRoleSupported, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Context(obj.Context, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AvailableServices(obj.AvailableServices, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_NewSelectedService(obj.NewSelectedService, phase);
                    }
                }
            }
            private void Update_ViewModel_IsPeripheralRoleSupported(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 88
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibleWhenFalseConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // Views\VirtualPeripheralPage.xaml line 92
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibleWhenTrueConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_ViewModel_Context(global::BluetoothLEExplorer.Models.GattSampleContext obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Context(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Context_CreatedServices(obj.CreatedServices, phase);
                        this.Update_ViewModel_Context_SelectedGattServerService(obj.SelectedGattServerService, phase);
                    }
                }
            }
            private void Update_ViewModel_Context_CreatedServices(global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Context_CreatedServices(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 97
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj11, obj, null);
                }
            }
            private void Update_ViewModel_Context_SelectedGattServerService(global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Context_SelectedGattServerService(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 97
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj11, obj, null);
                }
            }
            private void Update_ViewModel_AvailableServices(global::System.Collections.Generic.List<global::System.String> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 94
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj17, obj, null);
                }
            }
            private void Update_ViewModel_NewSelectedService(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualPeripheralPage.xaml line 94
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj17, obj, null);
                }
            }
            private void UpdateTwoWay_11_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.Context != null)
                            {
                                this.dataRoot.ViewModel.Context.SelectedGattServerService = (global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel)this.obj11.SelectedItem;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.NewSelectedService = (global::System.String)this.obj17.SelectedValue;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VirtualPeripheralPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<VirtualPeripheralPage_obj1_Bindings> weakRefToBindingObj; 

                public VirtualPeripheralPage_obj1_BindingsTracking(VirtualPeripheralPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VirtualPeripheralPage_obj1_Bindings>(obj);
                }

                public VirtualPeripheralPage_obj1_Bindings TryGetBindingObject()
                {
                    VirtualPeripheralPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Context(null);
                    UpdateChildListeners_ViewModel_Context_CreatedServices(null);
                    UpdateChildListeners_ViewModel_Context_SelectedGattServerService(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualPeripheralPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.ViewModels.VirtualPeripheralPageViewModel obj = sender as global::BluetoothLEExplorer.ViewModels.VirtualPeripheralPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Context(obj.Context, DATA_CHANGED);
                                bindings.Update_ViewModel_NewSelectedService(obj.NewSelectedService, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Context":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Context(obj.Context, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewSelectedService":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NewSelectedService(obj.NewSelectedService, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::BluetoothLEExplorer.ViewModels.VirtualPeripheralPageViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::BluetoothLEExplorer.ViewModels.VirtualPeripheralPageViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Context(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualPeripheralPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.Models.GattSampleContext obj = sender as global::BluetoothLEExplorer.Models.GattSampleContext;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Context_CreatedServices(obj.CreatedServices, DATA_CHANGED);
                                bindings.Update_ViewModel_Context_SelectedGattServerService(obj.SelectedGattServerService, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CreatedServices":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Context_CreatedServices(obj.CreatedServices, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedGattServerService":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Context_SelectedGattServerService(obj.SelectedGattServerService, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::BluetoothLEExplorer.Models.GattSampleContext cache_ViewModel_Context = null;
                public void UpdateChildListeners_ViewModel_Context(global::BluetoothLEExplorer.Models.GattSampleContext obj)
                {
                    if (obj != cache_ViewModel_Context)
                    {
                        if (cache_ViewModel_Context != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Context).PropertyChanged -= PropertyChanged_ViewModel_Context;
                            cache_ViewModel_Context = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Context = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Context;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Context_CreatedServices(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualPeripheralPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Context_CreatedServices(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    VirtualPeripheralPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel> cache_ViewModel_Context_CreatedServices = null;
                public void UpdateChildListeners_ViewModel_Context_CreatedServices(global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel> obj)
                {
                    if (obj != cache_ViewModel_Context_CreatedServices)
                    {
                        if (cache_ViewModel_Context_CreatedServices != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Context_CreatedServices).PropertyChanged -= PropertyChanged_ViewModel_Context_CreatedServices;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Context_CreatedServices).CollectionChanged -= CollectionChanged_ViewModel_Context_CreatedServices;
                            cache_ViewModel_Context_CreatedServices = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Context_CreatedServices = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Context_CreatedServices;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Context_CreatedServices;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Context_SelectedGattServerService(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualPeripheralPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel obj = sender as global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel cache_ViewModel_Context_SelectedGattServerService = null;
                public void UpdateChildListeners_ViewModel_Context_SelectedGattServerService(global::BluetoothLEExplorer.ViewModels.GenericGattServiceViewModel obj)
                {
                    if (obj != cache_ViewModel_Context_SelectedGattServerService)
                    {
                        if (cache_ViewModel_Context_SelectedGattServerService != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Context_SelectedGattServerService).PropertyChanged -= PropertyChanged_ViewModel_Context_SelectedGattServerService;
                            cache_ViewModel_Context_SelectedGattServerService = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Context_SelectedGattServerService = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Context_SelectedGattServerService;
                        }
                    }
                }
                public void RegisterTwoWayListener_11(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_SelectedItem();
                        }
                    });
                }
                public void RegisterTwoWayListener_17(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_SelectedValue();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\VirtualPeripheralPage.xaml line 16
                {
                    this.ViewModel = (global::BluetoothLEExplorer.ViewModels.VirtualPeripheralPageViewModel)(target);
                }
                break;
            case 3: // Views\VirtualPeripheralPage.xaml line 47
                {
                    this.AdaptiveVisualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 4: // Views\VirtualPeripheralPage.xaml line 48
                {
                    this.VisualStateNarrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5: // Views\VirtualPeripheralPage.xaml line 56
                {
                    this.VisualStateNormal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6: // Views\VirtualPeripheralPage.xaml line 64
                {
                    this.VisualStateWide = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 7: // Views\VirtualPeripheralPage.xaml line 75
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 10: // Views\VirtualPeripheralPage.xaml line 93
                {
                    this.NewService = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\VirtualPeripheralPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    VirtualPeripheralPage_obj1_Bindings bindings = new VirtualPeripheralPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 13: // Views\VirtualPeripheralPage.xaml line 103
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element13 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    VirtualPeripheralPage_obj13_Bindings bindings = new VirtualPeripheralPage_obj13_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element13.DataContext);
                    element13.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element13, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element13, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}


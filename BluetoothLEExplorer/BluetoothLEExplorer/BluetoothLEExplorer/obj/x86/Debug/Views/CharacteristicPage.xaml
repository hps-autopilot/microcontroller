<Page x:ConnectionId='1' x:Class="BluetoothLEExplorer.Views.CharacteristicPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:BluetoothLEExplorer.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:converters="using:Template10.Converters"
      xmlns:myconverters="using:BluetoothLEExplorer.Services.Converters"
      xmlns:vm="using:BluetoothLEExplorer.ViewModels" x:Name="ThisPage"
      xmlns:models="using:BluetoothLEExplorer.Models" 
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:CharacteristicPageViewModel x:ConnectionId='2' x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converters:ValueWhenConverter x:Key="VisibleWhenBlankConverter" When="">
            <converters:ValueWhenConverter.Value>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>

        <converters:ValueWhenConverter x:Key="VisibleWhenTrueConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>

        <myconverters:DisplayTypeToBooleanConverter x:Key="DisplayTypeToBooleanConverter" />
        <myconverters:WriteTypeToBooleanConverter x:Key="WriteTypeToBooleanConverter" />


    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:ConnectionId='3' x:Name="AdaptiveVisualStateGroup">



                <VisualState x:ConnectionId='4' x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="DisplayType.(RelativePanel.Below)" Value="ReadAgainButton" />
                        <Setter Target="DisplayType.(RelativePanel.AlignLeftWith)" Value="ReadValueText" />
                        <Setter Target="ReadValueText.(RelativePanel.AlignVerticalCenterWithPanel)" Value="False" />
                        <Setter Target="Value.(FrameworkElement.MaxWidth)" Value="180"/>
                        <Setter Target="radioButton.(ContentControl.Content)" Value="Dec"/>
                        <Setter Target="radioButton.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="radioButton1.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="radioButton2.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="radioButton3.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="ReadAgainButton.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="ReadAgainButton.(RelativePanel.AlignTopWith)" Value=""/>
                        <Setter Target="ReadAgainButton.(RelativePanel.Below)" Value="Value"/>
                        <Setter Target="ReadAgainButton.(FrameworkElement.Width)" Value="300"/>
                        <Setter Target="WriteType.(RelativePanel.Below)" Value="WriteButton"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:ConnectionId='5' x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="DisplayType.(RelativePanel.Below)" Value="ReadValueText" />
                        <Setter Target="DisplayType.(RelativePanel.AlignLeftWith)" Value="ReadValueText" />
                        <Setter Target="ReadValueText.(RelativePanel.AlignVerticalCenterWithPanel)" Value="False" />
                        <Setter Target="radioButton.(ContentControl.Content)" Value="Dec"/>
                        <Setter Target="radioButton.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="radioButton1.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="radioButton2.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="radioButton3.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,-45,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="Value.(FrameworkElement.MaxWidth)" Value="180"/>
                        <Setter Target="ReadAgainButton.(RelativePanel.RightOf)" Value="Value"/>
                        <Setter Target="WriteType.(RelativePanel.Below)" Value="WriteButton"/>
                        <Setter Target="WriteType.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:ConnectionId='6' x:Name="VisualStateDisplayType">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinDisplayTypeWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="DisplayType.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="DisplayType.(RelativePanel.Below)" Value="Value"/>
                        <Setter Target="DisplayType.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="radioButton.(ContentControl.Content)" Value="Decimal"/>
                        <Setter Target="ReadAgainButton.(RelativePanel.RightOf)" Value="Value"/>
                        <Setter Target="WriteType.(RelativePanel.RightOf)" Value=""/>
                        <Setter Target="WriteType.(RelativePanel.Below)" Value="WriteButton"/>
                        <Setter Target="WriteType.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                    </VisualState.Setters>

                </VisualState>

                <VisualState x:ConnectionId='7' x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="DisplayType.(RelativePanel.RightOf)" Value="ReadAgainButton" />
                        <Setter Target="ReadAgainButton.(RelativePanel.RightOf)" Value="Value"/>
                        <Setter Target="DisplayType.(RelativePanel.AlignLeftWithPanel)" Value="False"/>
                        <Setter Target="DisplayType.(RelativePanel.Below)" Value=""/>
                        <Setter Target="WriteType.(RelativePanel.RightOf)" Value="WriteButton"/>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:ConnectionId='8' x:Name="pageHeader"                       
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" Text="Characteristics Page" />

        <!--  content  -->

        <Grid x:ConnectionId='9' x:Name="Content" Padding="10" 
              RelativePanel.Below="pageHeader"
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True" 
              RelativePanel.AlignBottomWith="Notify">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <!-- Row 0 -->
                <RowDefinition Height="auto"/>
                <!-- Row 1 -->
                <RowDefinition Height="auto"/>
                <!-- Row 2 -->
                <RowDefinition Height="auto" />
                <!-- Row 3 -->
                <RowDefinition Height="auto" />
                <!-- Row 4 -->
                <RowDefinition Height="*" />
                <!-- Row 5 -->
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"  >
                <Run x:ConnectionId='52'                                      />
                <Run Text=" - " />
                <Run x:ConnectionId='53'                                                      />
                <Run Text=" - " />
                <Run x:ConnectionId='54'                                               />
            </TextBlock>

            <!--<StackPanel Grid.Row="1" Orientation="Horizontal"  >-->
            <StackPanel Grid.Row="1">
                <!--<TextBlock Foreground="Red" Text="Unsupported presentation format - using hex" Visibility="{x:Bind ViewModel.DisplayPresenationError}" />-->

                <RelativePanel VerticalAlignment="Center">
                    <TextBlock x:ConnectionId='50' x:Name="HandleValueText" Text="Handle: " VerticalAlignment="Center" Width="100" Height="32" Margin="0,5,5,5" />
                    <TextBlock x:ConnectionId='51'                                                                                      RelativePanel.RightOf="HandleValueText" RelativePanel.AlignVerticalCenterWith="HandleValueText" Width="100" Height="32" Margin="5" />
                </RelativePanel>
                <RelativePanel x:ConnectionId='40' VerticalAlignment="Center"                                                                                                                 >
                    <TextBlock x:ConnectionId='41' Name="ReadValueText" Text="Read Value: " VerticalAlignment="Center" Width="100" Height="32" Margin="0,5,5,5"/>
                    <Border x:ConnectionId='42' Name="Value" Background="LightGray" RelativePanel.RightOf="ReadValueText" RelativePanel.AlignVerticalCenterWith="ReadValueText" MinWidth="75" Height="32" Margin="5" >
                        <TextBlock x:ConnectionId='49'                                                             VerticalAlignment="Center"  Margin="5,0" TextWrapping="WrapWholeWords"/>
                    </Border>
                    <Button x:ConnectionId='43' Name="ReadAgainButton" Content="Read Again"                                                                                                                                                                       Margin="5" Width="100" Height="32" d:LayoutOverrides="LeftMargin, RightMargin" />

                    <!-- The radio buttons need to be in different groups because they are all bound to the same property, so it takes care of which ones stays on vs off. If there is no group then the stackpanel container -->
                    <!-- groups them and it conflicts with the value converter -->
                    <StackPanel x:ConnectionId='44' Name="DisplayType" Orientation="Horizontal" Margin="5" >
                        <RadioButton x:ConnectionId='45' x:Name="radioButton" Content="Decimal" IsChecked="{Binding Characteristic.DisplayType, Mode=TwoWay, Converter={StaticResource DisplayTypeToBooleanConverter}, ConverterParameter=Decimal }" Width="100" GroupName="a"/>
                        <RadioButton x:ConnectionId='46' x:Name="radioButton1" Content="Hex" IsChecked="{Binding Characteristic.DisplayType, Mode=TwoWay, Converter={StaticResource DisplayTypeToBooleanConverter}, ConverterParameter=Hex }" Width="100" GroupName="b"/>
                        <RadioButton x:ConnectionId='47' x:Name="radioButton2" Content="UTF8" IsChecked="{Binding Characteristic.DisplayType, Mode=TwoWay, Converter={StaticResource DisplayTypeToBooleanConverter}, ConverterParameter=UTF8 }" Width="100" GroupName="c"/>
                        <RadioButton x:ConnectionId='48' x:Name="radioButton3" Content="UTF16" IsChecked="{Binding Characteristic.DisplayType, Mode=TwoWay, Converter={StaticResource DisplayTypeToBooleanConverter}, ConverterParameter=UTF16 }" Width="100" GroupName="d"/>
                    </StackPanel>
                </RelativePanel>
            </StackPanel>

            <RelativePanel x:ConnectionId='12' Grid.Row="2" VerticalAlignment="Center"                                                                                                            >
                <TextBlock x:ConnectionId='33' x:Name="WriteValueText" Text="Write Value: " Margin="0,5,5,5" VerticalAlignment="Center" Width="100" />
                <TextBox x:ConnectionId='34' x:Name="WriteValue"                                                     VerticalAlignment="Center" Width="100" Margin="5" 
                         RelativePanel.RightOf="WriteValueText"                                        
                         />
                <Button x:ConnectionId='35' x:Name="WriteButton" Content="Write"                                       Margin="5" RelativePanel.RightOf="WriteValue" />
                <!-- The radio buttons need to be in different groups because they are all bound to the same property, so it takes care of which ones stays on vs off. If there is no group then the stackpanel container -->
                <!-- groups them and it conflicts with the value converter -->
                <StackPanel x:ConnectionId='36' Name="WriteType" Orientation="Horizontal" Margin="5">
                    <RadioButton x:ConnectionId='37' x:Name="radioButton4" Content="Decimal" IsChecked="{Binding WriteType, Mode=TwoWay, Converter={StaticResource WriteTypeToBooleanConverter}, ConverterParameter=Decimal }" Width="100" GroupName="e" />
                    <RadioButton x:ConnectionId='38' x:Name="radioButton5" Content="Hex" IsChecked="{Binding WriteType, Mode=TwoWay, Converter={StaticResource WriteTypeToBooleanConverter}, ConverterParameter=Hex }" Width="100" GroupName="f"                                                                   />
                    <RadioButton x:ConnectionId='39' x:Name="radioButton6" Content="UTF8" IsChecked="{Binding WriteType, Mode=TwoWay, Converter={StaticResource WriteTypeToBooleanConverter}, ConverterParameter=UTF8 }" Width="100" GroupName="g" />
                </StackPanel>
            </RelativePanel>
            <TextBlock x:ConnectionId='13' x:Name="TextProperties" Grid.Row="3" TextWrapping="WrapWholeWords">
                <Run Text="Properties: " FontWeight="Bold" />
                <Run x:ConnectionId='32'                                      />
            </TextBlock>

            <StackPanel Grid.Row="4">
                <CheckBox x:ConnectionId='23'                                                                     Content="Use Windows notifications"                                                                                                                        />
                <StackPanel x:ConnectionId='24' Orientation="Horizontal" HorizontalAlignment="Left"                                                                                                             >
                    <ToggleSwitch x:ConnectionId='29' x:Name="NotifySwitch" Header="Notify" 
                        OffContent="Off" OnContent="On"                                               />
                    <ProgressRing x:ConnectionId='30'                                                                                                                  
                                                                                  />
                    <TextBlock x:ConnectionId='31' Text="Error setting notification" Foreground="Red" 
                        Margin="-60, 30, 0, 0"
                                                                                                                                      />
                </StackPanel>
                <StackPanel x:ConnectionId='25' Orientation="Horizontal" HorizontalAlignment="Left"                                                                                                               >
                    <ToggleSwitch x:ConnectionId='26' x:Name="IndicateSwitch" Header="Indicate" 
                        OffContent="Off" OnContent="On"                                                />
                    <ProgressRing x:ConnectionId='27'                                                                                                                    
                                                                                 />
                    <TextBlock x:ConnectionId='28' x:Name="IndicateError" Text="Error setting notification" Foreground="Red"
                        Margin="-60, 30, 0, 0"
                                                                                                                                        />
                </StackPanel>
            </StackPanel>

            <StackPanel Grid.Row="5">
                <ListView x:ConnectionId='14'
                        x:Name="DescriptorsListView"
                        IsItemClickEnabled="True"
                        SelectionMode="Single"
                                                                                   
                                                                 >
                    <ListView.ItemTemplate >
                        <DataTemplate                                               >
                            <TextBlock x:ConnectionId='16' TextWrapping="WrapWholeWords">
                            <Run x:Name="DescriptorText" Text="Descriptor Name:" />
                            <Run x:ConnectionId='18'                                   FontWeight="Bold" />
                            <Run Text=" - " />
                            <Run x:Name="DescriptorHandleText" Text="Handle: " />
                            <Run x:ConnectionId='20'                                                         FontWeight="Bold" />
                            <Run Text=" - " />
                            <Run x:Name="DescriptorValueText" Text="Value: " />
                            <Run x:ConnectionId='22'                                    FontWeight="Bold" />
                            </TextBlock>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </Grid>

        <RelativePanel x:ConnectionId='10' x:Name="Notify" Background="LightBlue" Height="60"
                    RelativePanel.AlignLeftWithPanel="True" 
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True">

            <ScrollViewer Padding="10,0,0,0"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True">

                <ItemsControl x:ConnectionId='11' Padding="10,0,10,0"                                              />
            </ScrollViewer>
        </RelativePanel>
    </RelativePanel>
</Page>



#pragma checksum "C:\Users\tilt7\Documents\GitHub\microcontroller\BluetoothLEExplorer\BluetoothLEExplorer\BluetoothLEExplorer\Views\VirtualKeyboardPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "55A3492DF4DD72B682AC210ADE210726"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BluetoothLEExplorer.Views
{
    partial class VirtualKeyboardPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VirtualKeyboardPage_obj13_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVirtualKeyboardPage_Bindings
        {
            private global::BluetoothLEExplorer.Models.ObservableGattClient dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.TextBlock obj15;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14TextDisabled = false;
            private static bool isobj15TextDisabled = false;

            private VirtualKeyboardPage_obj13_BindingsTracking bindingsTracking;

            public VirtualKeyboardPage_obj13_Bindings()
            {
                this.bindingsTracking = new VirtualKeyboardPage_obj13_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 150 && columnNumber == 44)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 152 && columnNumber == 44)
                {
                    isobj15TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13: // Views\VirtualKeyboardPage.xaml line 149
                        this.obj13 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 14: // Views\VirtualKeyboardPage.xaml line 150
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15: // Views\VirtualKeyboardPage.xaml line 152
                        this.obj15 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj13.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::BluetoothLEExplorer.Models.ObservableGattClient) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IVirtualKeyboardPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::BluetoothLEExplorer.Models.ObservableGattClient)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::BluetoothLEExplorer.Models.ObservableGattClient obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                        this.Update_IsConnected(obj.IsConnected, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 150
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_IsConnected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 152
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj15, (global::System.String)this.LookupConverter("ConnectedWhenTrueConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VirtualKeyboardPage_obj13_BindingsTracking
            {
                private global::System.WeakReference<VirtualKeyboardPage_obj13_Bindings> weakRefToBindingObj; 

                public VirtualKeyboardPage_obj13_BindingsTracking(VirtualKeyboardPage_obj13_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VirtualKeyboardPage_obj13_Bindings>(obj);
                }

                public VirtualKeyboardPage_obj13_Bindings TryGetBindingObject()
                {
                    VirtualKeyboardPage_obj13_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualKeyboardPage_obj13_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.Models.ObservableGattClient obj = sender as global::BluetoothLEExplorer.Models.ObservableGattClient;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_IsConnected(obj.IsConnected, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsConnected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsConnected(obj.IsConnected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::BluetoothLEExplorer.Models.ObservableGattClient obj)
                {
                    VirtualKeyboardPage_obj13_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VirtualKeyboardPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVirtualKeyboardPage_Bindings
        {
            private global::BluetoothLEExplorer.Views.VirtualKeyboardPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.RelativePanel obj8;
            private global::Windows.UI.Xaml.Controls.RelativePanel obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.GridView obj11;
            private global::Windows.UI.Xaml.Controls.ProgressRing obj16;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj17;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj18Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj19Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj20Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8VisibilityDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11ItemsSourceDisabled = false;
            private static bool isobj16VisibilityDisabled = false;
            private static bool isobj17IsOnDisabled = false;
            private static bool isobj17IsEnabledDisabled = false;

            private VirtualKeyboardPage_obj1_BindingsTracking bindingsTracking;

            public VirtualKeyboardPage_obj1_Bindings()
            {
                this.bindingsTracking = new VirtualKeyboardPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 101 && columnNumber == 70)
                {
                    isobj8VisibilityDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 70)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 107 && columnNumber == 28)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 132 && columnNumber == 17)
                {
                    isobj11ItemsSourceDisabled = true;
                }
                else if (lineNumber == 109 && columnNumber == 75)
                {
                    isobj16VisibilityDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 35)
                {
                    isobj17IsOnDisabled = true;
                }
                else if (lineNumber == 114 && columnNumber == 35)
                {
                    isobj17IsEnabledDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 31)
                {
                    this.obj18.Click -= obj18Click;
                }
                else if (lineNumber == 95 && columnNumber == 31)
                {
                    this.obj19.Click -= obj19Click;
                }
                else if (lineNumber == 96 && columnNumber == 31)
                {
                    this.obj20.Click -= obj20Click;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // Views\VirtualKeyboardPage.xaml line 101
                        this.obj8 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                        break;
                    case 9: // Views\VirtualKeyboardPage.xaml line 105
                        this.obj9 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                        break;
                    case 10: // Views\VirtualKeyboardPage.xaml line 107
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // Views\VirtualKeyboardPage.xaml line 131
                        this.obj11 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 16: // Views\VirtualKeyboardPage.xaml line 109
                        this.obj16 = (global::Windows.UI.Xaml.Controls.ProgressRing)target;
                        break;
                    case 17: // Views\VirtualKeyboardPage.xaml line 111
                        this.obj17 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Views\VirtualKeyboardPage.xaml line 94
                        this.obj18 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj18Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoSettings();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj18Click;
                        break;
                    case 19: // Views\VirtualKeyboardPage.xaml line 95
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj19Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoPrivacy();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj19Click;
                        break;
                    case 20: // Views\VirtualKeyboardPage.xaml line 96
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj20Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoAbout();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj20Click;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IVirtualKeyboardPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::BluetoothLEExplorer.Views.VirtualKeyboardPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_ViewModel_IsSettingUp_M_Equals_3875955625(int phase)
            {
                global::System.Boolean p0 = false;
                global::System.Boolean result = this.dataRoot.ViewModel.IsSettingUp.Equals(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 111
                    if (!isobj17IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj17, result);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::BluetoothLEExplorer.Views.VirtualKeyboardPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_ViewModel(global::BluetoothLEExplorer.ViewModels.VirtualKeyboardPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsPeripheralRoleSupported(obj.IsPeripheralRoleSupported, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ErrorText(obj.ErrorText, phase);
                        this.Update_ViewModel_SubscribedGattClients(obj.SubscribedGattClients, phase);
                        this.Update_ViewModel_IsSettingUp(obj.IsSettingUp, phase);
                        this.Update_ViewModel_IsKeyboardEnabled(obj.IsKeyboardEnabled, phase);
                    }
                }
            }
            private void Update_ViewModel_IsPeripheralRoleSupported(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 101
                    if (!isobj8VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibleWhenFalseConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\VirtualKeyboardPage.xaml line 105
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibleWhenTrueConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_ErrorText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 107
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SubscribedGattClients(global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SubscribedGattClients(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 131
                    if (!isobj11ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj11, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsSettingUp(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_IsSettingUp_M_Equals_3875955625(phase);
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 109
                    if (!isobj16VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj16, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibleWhenTrueConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_IsKeyboardEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VirtualKeyboardPage.xaml line 111
                    if (!isobj17IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj17, obj);
                    }
                }
            }
            private void Update_ViewModel_IsSettingUp_M_Equals_3875955625(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj17IsEnabledDisabled)
                    {
                        this.PendingFunctionBindings["ViewModel_IsSettingUp_M_Equals_3875955625"] = new InvokeFunctionDelegate(this.Invoke_ViewModel_IsSettingUp_M_Equals_3875955625); 
                    }
                }
            }
            private void UpdateTwoWay_17_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsKeyboardEnabled = this.obj17.IsOn;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VirtualKeyboardPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<VirtualKeyboardPage_obj1_Bindings> weakRefToBindingObj; 

                public VirtualKeyboardPage_obj1_BindingsTracking(VirtualKeyboardPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VirtualKeyboardPage_obj1_Bindings>(obj);
                }

                public VirtualKeyboardPage_obj1_Bindings TryGetBindingObject()
                {
                    VirtualKeyboardPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_SubscribedGattClients(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualKeyboardPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.ViewModels.VirtualKeyboardPageViewModel obj = sender as global::BluetoothLEExplorer.ViewModels.VirtualKeyboardPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_ErrorText(obj.ErrorText, DATA_CHANGED);
                                bindings.Update_ViewModel_SubscribedGattClients(obj.SubscribedGattClients, DATA_CHANGED);
                                bindings.Update_ViewModel_IsSettingUp(obj.IsSettingUp, DATA_CHANGED);
                                bindings.Update_ViewModel_IsKeyboardEnabled(obj.IsKeyboardEnabled, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ErrorText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ErrorText(obj.ErrorText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SubscribedGattClients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SubscribedGattClients(obj.SubscribedGattClients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSettingUp":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsSettingUp(obj.IsSettingUp, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsKeyboardEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsKeyboardEnabled(obj.IsKeyboardEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::BluetoothLEExplorer.ViewModels.VirtualKeyboardPageViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::BluetoothLEExplorer.ViewModels.VirtualKeyboardPageViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SubscribedGattClients(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VirtualKeyboardPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void CollectionChanged_ViewModel_SubscribedGattClients(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    VirtualKeyboardPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient>;
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient> cache_ViewModel_SubscribedGattClients = null;
                public void UpdateChildListeners_ViewModel_SubscribedGattClients(global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableGattClient> obj)
                {
                    if (obj != cache_ViewModel_SubscribedGattClients)
                    {
                        if (cache_ViewModel_SubscribedGattClients != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SubscribedGattClients).PropertyChanged -= PropertyChanged_ViewModel_SubscribedGattClients;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_SubscribedGattClients).CollectionChanged -= CollectionChanged_ViewModel_SubscribedGattClients;
                            cache_ViewModel_SubscribedGattClients = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SubscribedGattClients = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SubscribedGattClients;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_SubscribedGattClients;
                        }
                    }
                }
                public void RegisterTwoWayListener_17(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_IsOn();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\VirtualKeyboardPage.xaml line 17
                {
                    this.ViewModel = (global::BluetoothLEExplorer.ViewModels.VirtualKeyboardPageViewModel)(target);
                }
                break;
            case 3: // Views\VirtualKeyboardPage.xaml line 60
                {
                    this.AdaptiveVisualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 4: // Views\VirtualKeyboardPage.xaml line 61
                {
                    this.VisualStateNarrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5: // Views\VirtualKeyboardPage.xaml line 69
                {
                    this.VisualStateNormal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6: // Views\VirtualKeyboardPage.xaml line 77
                {
                    this.VisualStateWide = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 7: // Views\VirtualKeyboardPage.xaml line 88
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 11: // Views\VirtualKeyboardPage.xaml line 131
                {
                    this.DevicesListView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 17: // Views\VirtualKeyboardPage.xaml line 111
                {
                    this.VirtualKeyboardSwitch = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\VirtualKeyboardPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    VirtualKeyboardPage_obj1_Bindings bindings = new VirtualKeyboardPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 13: // Views\VirtualKeyboardPage.xaml line 149
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element13 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    VirtualKeyboardPage_obj13_Bindings bindings = new VirtualKeyboardPage_obj13_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element13.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element13.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element13, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element13, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

